// <auto-generated />
using Acc.Infrastructure.EFCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Acc.Infrastructure.EFCore.Migrations
{
    [DbContext(typeof(AccContext))]
    [Migration("20221017130426_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Acc.Domain.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "383cac8c-52db-4910-9d82-436ec592b223",
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = "3062d373-692a-4719-af17-e539348cedf5",
                            RoleName = "Kitchen"
                        },
                        new
                        {
                            Id = "7d873ea9-74df-417a-b56a-660d16d87a27",
                            RoleName = "FrontDesk"
                        });
                });

            modelBuilder.Entity("Acc.Domain.Models.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("Acc.Domain.Models.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("PhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c2fba437-1de8-440b-902d-8dda014454e0",
                            Email = "Admin@gmail.com",
                            Password = "ea661MuJdwQ2K0rmZRlEz7xcXpadVVD+FQ5prf2UBAA=",
                            PhoneConfirmed = false,
                            PhoneNumber = "111111",
                            UserName = "Manager"
                        },
                        new
                        {
                            Id = "130447bc-a90b-418d-8e2c-fbc5a710dd80",
                            Email = "Kitchen@gmail.com",
                            Password = "ea661MuJdwQ2K0rmZRlEz7xcXpadVVD+FQ5prf2UBAA=",
                            PhoneConfirmed = false,
                            PhoneNumber = "111111",
                            UserName = "Kitchen"
                        },
                        new
                        {
                            Id = "ec5575d0-b739-46f1-b91b-d30e26db1491",
                            Email = "FrontDesk@gmail.com",
                            Password = "ea661MuJdwQ2K0rmZRlEz7xcXpadVVD+FQ5prf2UBAA=",
                            PhoneConfirmed = false,
                            PhoneNumber = "111111",
                            UserName = "FrontDesk"
                        });
                });

            modelBuilder.Entity("Acc.Domain.Models.UserRole", b =>
                {
                    b.HasOne("Acc.Domain.Models.Role", "RoleModel")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Acc.Domain.Models.Users", "UserModel")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleModel");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("Acc.Domain.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Acc.Domain.Models.Users", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
